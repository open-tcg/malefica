language: cpp
dist: trusty
sudo: required

matrix:
  include:
  - os: linux
    compiler: gcc
    addons: &gcc7
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7']
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TYPE='Release'
  
  - os: linux
    compiler: gcc
    addons: *gcc7
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TYPE='Debug' BUILD_COVERAGE=yes
  
  - os: linux
    compiler: clang
    addons: &clang6
      apt:
        sources: ['llvm-toolchain-trusty-6.0', 'ubuntu-toolchain-r-test']
        packages: ['clang-6.0', 'libstdc++-6-dev', g++-7]
    env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0" BUILD_TYPE='Release'
  
  - os: linux
    compiler: clang
    addons: *clang6
    env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0" BUILD_TYPE='Debug'

  - os: osx
    osx_image: xcode9.3beta
    compiler: clang
    env: MATRIX_EVAL="CC=clang && CXX=clang++" BUILD_TYPE='Debug'
  
  - os: osx
    osx_image: xcode9.3beta
    compiler: clang
    env: MATRIX_EVAL="CC=clang && CXX=clang++" BUILD_TYPE='Release'

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - if [[ ${TRAVIS_OS_NAME} == 'linux' ]]; then . .travis_scripts/travis.linux; fi
  - if [[ ${TRAVIS_OS_NAME} == 'osx' ]]; then . .travis_scripts/travis.osx; fi

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - |-
    if [ -n "${BUILD_COVERAGE}" ]; then
      pip install --user pyyaml cpp-coveralls
      cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev -DUSE_GCOV=ON
    else
      cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev
    fi

script:
  - |-
    if [ -n "${BUILD_COVERAGE}" ]; then
      cmake --build ./build --target coverage
      coveralls -b ./build -i ./include/malefica 
    else
      cmake --build ./build
      cmake --build ./build --target test
    fi

after_success:
  - if [ -n "${BUILD_COVERAGE}" ]; then coveralls -i SDL2pp; fi