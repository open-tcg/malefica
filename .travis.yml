language: cpp
dist: trusty
sudo: required

matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - cmake
        - libsdl2-dev
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" GCOV=gcov-7 BUILD_TARGET=Coverage
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-4.0
        packages:
        - clang-4.0
        - libstdc++-4.9-dev
        - cmake
        - libsdl2-dev
    env: MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-5.0
        packages:
        - clang-5.0
        - libstdc++-4.9-dev
        - cmake
        - libsdl2-dev
    env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - libsdl2-dev
      coverity_scan:
        project:
          name: zie87/malefica
        notification_email: zie.develop@gmail.com
        build_command_prepend: cov-configure --comptype gcc --compiler gcc-7 --template
        build_command: cmake --build ./build --target all
        branch_pattern: coverity_scan
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TARGET=Coverity
  - os: osx
    osx_image: xcode8.3
  - os: osx
    osx_image: xcode9.4
env:
  global:
   - secure: C6IMB6lez77KiKiBDrJg40lt45jr9k8vKt4IxfTML5zlYB7nWye2IBzbmod25N9ge5HInh/1bS/WFdSbFAtIepsQ/TgZh0SVAdSHrYU/9LX9RS4LU8j8XWRXLb4cpamrvOMEjp9/0iSVb0IEVY0/YmnF5t5Bu9c1AJ4eM+hBCPErqkGjkcodp40gONO91Eww/k47Y70YmZNEayB3af2pEYLagTAzcgKE2ZroHz5MUEYhgDaZspTYfnpeipfge83OfX3QS9X2+b+uxp4MIdcCfTJtaWOQj9VamQB9jAdOvI/lGpbnGumLBJOWcz67O3OOd/df9xcT8kTyr397TPAXcUj6vA8s122MZkOTkuZL5SBBuoIF4EM/srh4MKAADIiWZzybouXt7H+frkEn0TqEejUCjAO0gdr6CvcZylUhJWHoxQrjof4sJT9ccPeHSg++Bta/INn8HJqh6CCKBvXAU6Mg5f6NJjAD9tD5tC618KwSHqIwpeCOuby/skr9Fk/+DaeHmXWbYv9Sv0Ds24rDvRpcF2kke6UefANR4sUhKFAesM1uMUPSts3AqkILdbZCY3M6r9fgnZ+utDL4vZA0YwNjAa5Nv21ANHQHk6X7E2g10DP4ZosolsZuQibElCWPbKaUD6CG2Q4dpHPXfntVe+RVEqW75K8npGB/X+ENHPE=

before_install:
- eval "${MATRIX_EVAL}"
- |-
  if [[ ${BUILD_TARGET} == 'Coverity' ]]; then
    echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN
    CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  fi
  
install:
- |-
  if [[ ${TRAVIS_OS_NAME} == 'linux' ]]; then
    sudo apt-get -qq update
    sudo apt-get install -qq libopenal-dev pulseaudio libpulse-dev
    
    if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
      sudo apt-get install -qq lcov gcovr gdb apport
      pip install --user pyyaml cpp-coveralls
    fi
  
    wget https://icculus.org/physfs/downloads/physfs-3.0.1.tar.bz2 -O /tmp/physfs.tar.bz2
    tar -xavf /tmp/physfs.tar.bz2 -C /tmp
    cd /tmp/physfs-3.0.1 && cmake -H. -Bbuild -DCMAKE_INSTALL_PREFIX=/usr/local -DPHYSFS_BUILD_TEST=OFF
    cd build && make && sudo make install
    
    cd ${TRAVIS_BUILD_DIR}
  fi
- |-
  if [[ ${TRAVIS_OS_NAME} == 'osx' ]]; then
    brew install  openal-soft physfs sdl2
  fi
before_script:
- |-
  if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
    cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug -DUSE_GCOV=ON
  else
    cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug
  fi
script:
- if [[ "${COVERITY_SCAN_BRANCH}" == 1 ]]; then echo "Don't build on coverty_scan
  branch."; exit 0; fi
- |-
  if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
    cmake --build ./build --target unittest_coverage -- -j3
  else
    cmake --build ./build --target all -- -j3
    cd  build
    ctest -v
  fi
after_success:
- |-
  if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
    coveralls -b ./build -e /usr -e ${PWD}/3rd -e ${PWD}/src/tests -i include -i src --gcov ${GCOV} --gcov-options '\-lp' > /dev/null
    lcov --gcov-tool ${GCOV} --directory . --capture --output-file coverage.info
    lcov --gcov-tool ${GCOV} --remove coverage.info '/usr/*' --output-file coverage.info
    lcov --gcov-tool ${GCOV} --remove coverage.info "${PWD}/3rd/*" --output-file coverage.info
    lcov --gcov-tool ${GCOV} --remove coverage.info "${PWD}/src/tests/*" --output-file coverage.info
    bash <(curl -s https://codecov.io/bash)
  fi
